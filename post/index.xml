<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Air Junda Space</title>
    <link>https://airjunda.github.io/post/</link>
    <description>Recent content in Posts on Air Junda Space</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&amp;copy; 2021. All rights reserved.</copyright>
    <lastBuildDate>Thu, 04 Nov 2021 22:39:37 +0800</lastBuildDate><atom:link href="https://airjunda.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>那些Hugo踩过的坑</title>
      <link>https://airjunda.github.io/post/hugo/</link>
      <pubDate>Thu, 04 Nov 2021 22:39:37 +0800</pubDate>
      
      <guid>https://airjunda.github.io/post/hugo/</guid>
      <description>Preface 部署网站这事就是个ops的活。虽然我工作的部门也是做ops的，但是我其实是不太喜欢做ops。无论是编程还是以前做实验，做ops经常会手忙脚乱。那怕按照给的文章或者guide去做，我依然会遇到一些奇奇怪怪的hurdles。这篇文章就是记录下我第一次上线这个网站时踩过的坑。
那些年踩过的坑 人类的本质是复读机。万事开头，先搜攻略。于是搜到了这2个，觉得比较有用。未来如果忘了hugo部署也可以直接从这2个攻略复习。
 如何利用 GitHub Pages 和 Hugo 轻松搭建个人博客？ 使用 Hugo + Github 搭建个人博客  下面开始说按照上面的步骤时遇到的坑和注意事项。
发布前的阶段 安装好hugo后，主要做的事情是导入自己喜欢的theme，和用MD写自己的文章，然后在本地跑起来，预览下网站效果。
 导入theme  导入theme时，不同攻略中有2种方式：使用git submodule命令或者直接git clone。 建议使用 git submodule add 去导入。原因是如果使用action的CICD, 现有的yaml文件里需要指定theme文件是通过submodule去拉取。如果一开始没有添加theme路径为submodule, 在workflow的build阶段会报错找不到submodule theme/xxx。使用submodule的例子如下：   git submodule add https://github.com/dillonzq/LoveIt.git themes/LoveIt
  创建新文章  命令是这样写的 hugo new posts/demo.md  但是很多theme默认文章是在 post/ 目录下。因此如果发现自己写的文章在网站启动后找不到，建议把上面命令里的posts改成post试一试。这个坑我搞了半个晚上才发现 XD    发布阶段 文章写好，本地调试后就要部署了。我们本地写的md文章其实是需要生成html,css,js等网页的文件然后才能发布成一个网站。不过这个任务就是Hugo去做了。Hugo解放了我们，让我们可以专心写md而不用管html这些细节。
生成网站文件的命令是 hugo -D 默认是在当前根目录下生成一个public文件夹。这个public里的内容才是部署需要的。到这一步时，项目文件的结构应该是这样的：
├── archetypes # 存放生成博客的模版 ├── assets # 存放被 Hugo Pipes 处理的文件 ├── config.</description>
    </item>
    
    <item>
      <title>My First Post</title>
      <link>https://airjunda.github.io/post/my-first-post/</link>
      <pubDate>Thu, 04 Nov 2021 02:26:03 +0800</pubDate>
      
      <guid>https://airjunda.github.io/post/my-first-post/</guid>
      <description>Hello Hugo! 你好 Hugo! </description>
    </item>
    
    <item>
      <title>Where It All Began</title>
      <link>https://airjunda.github.io/post/debut/</link>
      <pubDate>Thu, 04 Nov 2021 02:26:03 +0800</pubDate>
      
      <guid>https://airjunda.github.io/post/debut/</guid>
      <description>为什么会有这个网站 自从2018年开始转专业学习CS，一直想自己搭一个portfolio网站，作为个人页面放到简历里。然而到了今天，我发现自己又有了多一个需求，就是做一个自己的Knowledge Base。
不论是刷题也好，还是平时开发过程中的知识积累，我都希望有个地方能过记录自己的思考。于是萌生了写技术博客的念头。如果只是想写个博客，那么平台实在太多了, 比如Google Blog, CSDN, 简书。 然而我还是想希望写blog的同时能锻炼一些开发运维的技能。于是最后决定使用markdown写文章，用Hugo进行构建, 部署到GitHub Page的技术路线。
使用Hugo其实是做了一番纠结的。最早接触类似的工具其实是jekyll, 但是jekyll是用Ruby开发的而Hugo则是用Go。虽然都是cli工具, 本身的使用不需要了解Go或者Ruby。但是既然我工作中用Go比较多。那还是选择用hugo吧。万一之后想研究下源代码或者二次开发呢？虽然自己现在的水平看个源码都费劲，但梦想还是要用的嘛 :)
总结就是个人计划是把这个网站作为我的个人知识库使用。顺道可以写写非技术的blog。
关于 Air Junda 网名大家总是喜欢取一些酷酷的名字。那为什么要取 Air Junda 这个名字呢？
因为我是一个航空迷，如果不做software engineer, 我的理想其实是做一个机师。那Air Junda 不就像一个航空公司的名字嘛。这种做白日梦的感觉也是挺好的。</description>
    </item>
    
  </channel>
</rss>
