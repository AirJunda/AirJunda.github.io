<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Celery on Air Junda Space</title>
    <link>https://airjunda.github.io/tags/celery/</link>
    <description>Recent content in Celery on Air Junda Space</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&amp;copy; 2021. All rights reserved.</copyright>
    <lastBuildDate>Sat, 19 Mar 2022 21:30:36 +0800</lastBuildDate><atom:link href="https://airjunda.github.io/tags/celery/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>那些年 Celery 踩过的坑</title>
      <link>https://airjunda.github.io/post/celery/</link>
      <pubDate>Sat, 19 Mar 2022 21:30:36 +0800</pubDate>
      
      <guid>https://airjunda.github.io/post/celery/</guid>
      <description>初见Celery 下一家公司要用Celery, 于是决定在家自学。结果没想到看着官方文档很简单，其实有不少隐藏的坑。这篇文章就是记录下自己踩过的坑和排查经历。至于Celery是什么的内容，不在本文介绍。
Celery教程： https://www.celerycn.io/ru-men/celery-chu-ci-shi-yong
Windows的坑 在参考上面的教程时，我用的redis做broker。启动celery worker后，发现terminal显示了message received, 但是worker不执行相应的消息处理。搜索Google的解决方案，发现加上下面的 -P solo 参数启动worker可以解决：
celery -A tasks worker --loglevel=info -P solo 但是worker只能执行一次消息的处理。后续的消息都没反应。并且用ctrl + c无法终止worker, 会挂死，只能关掉terminal。
排查结论 最后发现有人提到了celery对windows的支持已经没了。celery &amp;gt;= 4的版本在windows下看起来是有bug的。并且感觉这个bug和win下的celery并行有关。于是决定试一试Linux下celery行不行。
Ubuntu的坑 改用Ubuntu的VM并不是一帆风顺的，遇到了好几个问题。最后都解决了。
Python3的版本 之前的vagrantfile一直用的Ubuntu 16的版本，但是16的版本呢，python3装的是3.5。我尝试网上的教程安装3.8，但是就死活说找不到 python3.8. 有人说是因为16的版本太旧了。装不了3.8和3.9。 而3.5的话，import新的celery会报语法错误。于是最后折腾了半天只好卸载了python3.5,装了3.6。然而这个带来了另一问题，就是pip3也卸载了。而重新装pip3会主动安装python3.5-minimum. 最后的解决方案是单独装pip3.6, 之后py3的包都用pip3.6而不是pip3去管理，或者设置soft link让pip3指向pip3.6。 这个过程涉及了好几个步骤，记录如下：
安装python3.6 apt-key adv --refresh-keys --keyserver keyserver.ubuntu.com apt-get -y install software-properties-common add-apt-repository ppa:deadsnakes/ppa apt get update apt-get -y install python3.6 apt remove python3.5-minimal -y #有人说不建议删除3.5，有些系统工具会用不了。我当时是删了。  指定python3为python3.6 设置soft link, 让python3指向python3.6的bin
which python #找出python的bin path, 一般在/usr/bin ln -sf /usr/bin/python3.</description>
    </item>
    
  </channel>
</rss>
